(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var menu = require('./menu');
var order = require('./order');
var controller = require('./controller').init();


},{"./controller":2,"./menu":3,"./order":4}],2:[function(require,module,exports){
var controller = {};
var view = require('./view');
var menu = require('./menu');
var order = require('./order');

controller.init = function() {
  view.init(menu);
  this.listeners();
};

controller.listeners = function () {
  var _this = this;
  $('input').on('change', function() {
    var $this = $(this);
    var thisDiner = $this.parents('.menu-hold').data('diner');
    var thisItem = $this.parents('.menuitem')
    var item = {};

    item.name = thisItem.find('.name').text();
    item.price = parseFloat(thisItem.find('.price').text())
    item.checked = $this.attr('checked');
    item.diner = thisDiner;

    console.log(item)
    _this.handleMenuItem(item);
  });
};

controller.handleMenuItem = function (item) {
  if (item.checked) {
    this.addItem(item);
  } else {
     this.removeItem(item);
  }
};

controller.addItem = function(item) {
  var diner = order['diner' + item.diner];
  var itemAlreadyOrder = _.find(diner, function(selection) {
    return selection.name === item.name;
  });

  if (itemAlreadyOrder) {
    return;
  }

  diner.push(item);

  console.log(order.getTotal(item.diner));
}

controller.removeItem = function(item) {

}

module.exports = controller;
},{"./menu":3,"./order":4,"./view":5}],3:[function(require,module,exports){
var menu = [{
    name: 'Soup of the day',
    price: 3,
    type: 'Starters'
}, {
    name: 'Pâté',
    price: 5,
    type: 'Starters'
}, {
    name: 'Bruschetta',
    price: 4.50,
    type: 'Starters'
}, {
    name: 'Prawn cocktail',
    price: 6,
    type: 'Starters'
}, {
    name: 'Steak',
    price: 18,
    type: 'Main course'
}, {
    name: 'Meatballs',
    price: 11.50,
    type: 'Main course'
}, {
    name: 'Salmon fillet',
    price: 14,
    type: 'Main course'
}, {
    name: 'Vegetarian lasagna',
    price: 12,
    type: 'Main course'
}, {
    name: 'Sticky toffee pudding',
    price: 4,
    type: 'Desserts'
}, {
    name: 'Tiramisu',
    price: 4.50,
    type: 'Desserts'
}, {
    name: 'Cheesecake',
    price: 4,
    type: 'Desserts'
}, {
    name: 'Ice cream',
    price: 3.50,
    type: 'Desserts'
}];


module.exports = menu;
},{}],4:[function(require,module,exports){
var order = {};

order.diner1 = [],
order.diner2 = [];

order.getTotal = function(diner) {
  
  if(!this['diner' + diner].length) {
    return
  }

  var total = 0;

  _.forEach(this['diner' + diner], function(item) {
      total += item.price;
  });

  return total;
};

module.exports = order;
},{}],5:[function(require,module,exports){
var view = {};
var menu = {};


view.init = function(data) {
  menu.menuitems = data;
  var source = $("#menu-template").html(),
    template = Handlebars.compile(source); 
    $('.left-menu').append(template(menu));
    $('.right-menu').append(template(menu));
};

module.exports = view;
},{}]},{},[1])